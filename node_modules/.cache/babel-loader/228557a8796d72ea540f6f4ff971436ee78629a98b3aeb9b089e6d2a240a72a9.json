{"ast":null,"code":"import API_BASE_URL from '../config/api';\nconst register = async userData => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst login = async userData => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst getUser = async authorId => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/user/${authorId}`);\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: userData\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst updateUserImage = async (userId, formData) => {\n  const response = await fetch(`http://localhost:8000/api/auth/${userId}/image`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: formData\n  });\n  if (!response.ok) {\n    const res = await response.json();\n    throw new Error(res.message || JSON.stringify(res));\n  }\n  return await response.json();\n};\nconst authService = {\n  register,\n  login,\n  getUser,\n  updateUser,\n  updateUserImage\n};\nexport default authService;","map":{"version":3,"names":["API_BASE_URL","register","userData","response","fetch","method","headers","body","JSON","stringify","ok","res","json","message","err","console","log","error","Error","responseData","localStorage","setItem","data","login","getUser","authorId","updateUser","userId","Authorization","parse","getItem","token","updateUserImage","formData","authService"],"sources":["/Users/student/iXperience/frontend/src/services/authService.js"],"sourcesContent":["import API_BASE_URL from '../config/api';\n\nconst register = async (userData) => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\n\nconst login = async (userData) => {\n  const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\n\nconst getUser = async (authorId) => {\n  const response = await fetch(\n    `${API_BASE_URL}/api/auth/user/${authorId}`\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(\n    `${API_BASE_URL}/api/auth/user/${userId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n      },\n      body: userData,\n    }\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst updateUserImage = async (userId, formData) => {\n  const response = await fetch(`http://localhost:8000/api/auth/${userId}/image`, {\n    method: \"PUT\",\n    headers: {\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n    },\n    body: formData,\n  });\n\n  if (!response.ok) {\n    const res = await response.json();\n    throw new Error(res.message || JSON.stringify(res));\n  }\n\n  return await response.json();\n};\n\nconst authService = {\n  register,\n  login,\n  getUser,\n  updateUser,\n  updateUserImage\n};\n\nexport default authService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}