{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport categoryService from \"../services/categoryService\";\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCategory: null,\n  categories: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const fetchCategories = createAsyncThunk(\"categories/fetchCategories\", async (_, thunkAPI) => {\n  try {\n    return await categoryService.fetchCategories();\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    resetSuccessAndError: state => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchCategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories = payload.data;\n      // state.isSuccess = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(fetchCategories.rejected, (state, {\n      payload\n    }) => {\n      state.message = payload;\n      state.isError = true;\n      state.isLoading = false;\n    });\n  }\n});\nexport const {\n  reset,\n  resetSuccessAndError\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoryService","initialState","addCategory","editCategory","deleteCategory","categories","isError","isSuccess","isLoading","message","fetchCategories","_","thunkAPI","error","rejectWithValue","categoriesSlice","name","reducers","reset","state","resetSuccessAndError","extraReducers","builder","addCase","pending","fulfilled","payload","data","rejected","actions","reducer"],"sources":["/Users/student/iXperience/frontend/src/features/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport categoryService from \"../services/categoryService\";\n\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCategory: null,\n  categories: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const fetchCategories = createAsyncThunk(\n  \"categories/fetchCategories\",\n  async (_, thunkAPI) => {\n    try {\n      return await categoryService.fetchCategories();\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    resetSuccessAndError: (state) => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCategories.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchCategories.fulfilled, (state, { payload }) => {\n        state.categories = payload.data;\n        // state.isSuccess = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(fetchCategories.rejected, (state, { payload }) => {\n        state.message = payload;\n        state.isError = true;\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { reset, resetSuccessAndError } = categoriesSlice.actions;\nexport default categoriesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAOC,eAAe,MAAM,6BAA6B;AAEzD,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,IAAI;EAClBC,cAAc,EAAE,IAAI;EACpBC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGX,gBAAgB,CAC7C,4BAA4B,EAC5B,OAAOY,CAAC,EAAEC,QAAQ,KAAK;EACrB,IAAI;IACF,OAAO,MAAMZ,eAAe,CAACU,eAAe,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMJ,OAAO,GAAGI,KAAK,CAACJ,OAAO,IAAII,KAAK;IACtC,OAAOD,QAAQ,CAACE,eAAe,CAACL,OAAO,CAAC;EAC1C;AACF,CACF,CAAC;AAED,OAAO,MAAMM,eAAe,GAAGjB,WAAW,CAAC;EACzCkB,IAAI,EAAE,YAAY;EAClBf,YAAY;EACZgB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAKlB,YAAY;IAC9BmB,oBAAoB,EAAGD,KAAK,IAAK;MAC/BA,KAAK,CAACZ,SAAS,GAAG,KAAK;MACvBY,KAAK,CAACb,OAAO,GAAG,KAAK;MACrBa,KAAK,CAACV,OAAO,GAAG,EAAE;IACpB;EACF,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,eAAe,CAACc,OAAO,EAAGL,KAAK,IAAK;MAC3CA,KAAK,CAACX,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDe,OAAO,CAACb,eAAe,CAACe,SAAS,EAAE,CAACN,KAAK,EAAE;MAAEO;IAAQ,CAAC,KAAK;MAC1DP,KAAK,CAACd,UAAU,GAAGqB,OAAO,CAACC,IAAI;MAC/B;MACAR,KAAK,CAACX,SAAS,GAAG,KAAK;MACvBW,KAAK,CAACV,OAAO,GAAGiB,OAAO,CAACjB,OAAO;IACjC,CAAC,CAAC,CACDc,OAAO,CAACb,eAAe,CAACkB,QAAQ,EAAE,CAACT,KAAK,EAAE;MAAEO;IAAQ,CAAC,KAAK;MACzDP,KAAK,CAACV,OAAO,GAAGiB,OAAO;MACvBP,KAAK,CAACb,OAAO,GAAG,IAAI;MACpBa,KAAK,CAACX,SAAS,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEU,KAAK;EAAEE;AAAqB,CAAC,GAAGL,eAAe,CAACc,OAAO;AACtE,eAAed,eAAe,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}